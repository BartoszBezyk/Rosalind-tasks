# -*- coding: utf-8 -*-
"""REVC: Complementing a Strand of DNA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19nkXuXrixLksxX2f8YcdXbryxzVHt1i4
"""



"""## REVC: [Complementing a Strand of DNA](https://rosalind.info/problems/revc/)"""

def reverse_complement(dna):
    """
    Solves https://rosalind.info/problems/rna/

    In DNA strings, symbols 'A' and 'T' are complements of each other, as are 'C' and 'G'.

The reverse complement of a DNA string s
 is the string sc
 formed by reversing the symbols of s
, then taking the complement of each symbol (e.g., the reverse complement of "GTCA" is "TGAC").
    """
    compl_dict = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A'}
    sc = str.maketrans(compl_dict)
    return dna.translate(sc)[::-1]

help(reverse_complement)

SampleDataset = 'AAAACCCGGT'

reverse_complement(SampleDataset)

from google.colab import files

def string_from_uploaded_file():  
  uploaded = files.upload() # https://colab.research.google.com/notebooks/io.ipynb#scrollTo=BaCkyg5CV5jF
  for bytesObject in uploaded.values(): # https://www.w3schools.com/python/ref_dictionary_values.asp
    return bytesObject.decode('utf-8') # https://pythonexamples.org/python-bytes-to-string/#3
    
input_string = string_from_uploaded_file()
output_string = reverse_complement(input_string)
print(output_string)
with open('rosalind_revc_output.txt', 'w') as f:
  f.write(output_string)
files.download('rosalind_revc_output.txt') # https://colab.research.google.com/notebooks/io.ipynb#scrollTo=hauvGV4hV-Mh